<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
	"-//Puppy Crawl//DTD Check Configuration 1.2//EN"
	"http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--
	This is taken from Sun checks, modified for the purpose of Seneca BTS630.
-->

<module name="Checker">
	<!-- If you set the basedir property below, then all reported file names
		will be relative to the specified directory. See http://checkstyle.sourceforge.net/5.x/config.html#Checker
		<property name="basedir" value="${basedir}"/> -->

	<!-- Checks that a package-info.java file exists for each package. -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
	<module name="JavadocPackage" />

	<!-- Checks whether files end with a new line. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
	<module name="NewlineAtEndOfFile" />

	<!-- Checks that property files contain the same keys. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
	<module name="Translation" />

	<!-- Checks for Size Violations. -->
	<!-- See http://checkstyle.sf.net/config_sizes.html -->
	<module name="FileLength" />

	<!-- Checks for whitespace -->
	<!-- See http://checkstyle.sf.net/config_whitespace.html -->
	<!-- <module name="FileTabCharacter"/> -->

	<!-- Miscellaneous other checks. -->
	<!-- See http://checkstyle.sf.net/config_misc.html -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$" />
		<property name="minimum" value="0" />
		<property name="maximum" value="0" />
		<property name="message" value="Line has trailing spaces." />
	</module>

	<module name="TreeWalker">
		<!-- Anonymous Inner Length -->
		<module name="AnonInnerLength" />

		<!-- Check Boolean Expression Complexity -->
		<module name="BooleanExpressionComplexity" />

		<!-- Check Cyclomatic Complexity -->
		<module name="CyclomaticComplexity" />

		<!-- Default is always placed at the end of a switch statement. -->
		<module name="DefaultComesLast" />

		<!-- Avoid null when checking for equality. -->
		<module name="EqualsAvoidNull" />

		<!-- Cannot catch java.lang.RuntimeException -->
		<module name="IllegalCatch">
			<property name="illegalClassNames" value="java.lang.RuntimeException" />
		</module>

		<!-- Cannot throw java.lang.RuntimeException. -->
		<module name="IllegalThrows">
			<property name="illegalClassNames"
				value="java.lang.Throwable, java.lang.Error, java.lang.RuntimeException" />
		</module>

		<module name="Indentation">
			<property name="basicOffset" value="8" />
		</module>

		<module name="MissingDeprecated" />

		<module name="MissingOverride" />

		<module name="ModifiedControlVariable" />

		<module name="MultipleStringLiterals" />

		<module name="MultipleVariableDeclarations" />

		<module name="NestedIfDepth">
			<property name="max" value="2" />
		</module>

		<module name="NestedTryDepth" />

		<module name="NoCloneCheck" />

		<module name="PackageDeclaration" />

		<module name="ParameterAssignment" />

		<module name="ParameterNumber">
			<property name="max" value="3" />
		</module>

		<module name="StringLiteralEquality" />

		<module name="SuperClone" />

		<module name="SuperFinalize" />

		<module name="ThrowsCount" />

		<module name="TrailingComment" />

		<module name="UnnecessaryParentheses" />

		<!-- Checks for Javadoc comments. -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocType" />

		<module name="JavadocMethod">
			<property name="scope" value="package" />
			<property name="allowMissingParamTags" value="true" />
			<property name="allowMissingThrowsTags" value="true" />
			<property name="allowMissingReturnTag" value="true" />
			<property name="allowMissingPropertyJavadoc" value="true" />
		</module>

		<!-- <module name="JavadocVariable" /> -->

		<module name="JavadocStyle" />

		<!-- Checks for Naming Conventions. -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName" />
		<module name="LocalFinalVariableName" />
		<module name="LocalVariableName" />
		<module name="MemberName" />
		<module name="MethodName" />
		<module name="PackageName" />
		<module name="ParameterName" />
		<module name="StaticVariableName" />
		<module name="TypeName" />

		<!-- Checks for Headers -->
		<!-- See http://checkstyle.sf.net/config_header.html -->
		<!-- <module name="Header"> -->
		<!-- The follow property value demonstrates the ability -->
		<!-- to have access to ANT properties. In this case it uses -->
		<!-- the ${basedir} property to allow Checkstyle to be run -->
		<!-- from any directory within a project. See property -->
		<!-- expansion, -->
		<!-- http://checkstyle.sf.net/config.html#properties -->
		<!-- <property -->
		<!-- name="headerFile" -->
		<!-- value="${basedir}/java.header"/> -->
		<!-- </module> -->

		<!-- Following interprets the header file as regular expressions. -->
		<!-- <module name="RegexpHeader"/> -->

		<!-- Checks for imports -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport" />
		<module name="IllegalImport" /> <!-- defaults to sun.* packages -->
		<module name="RedundantImport" />
		<module name="UnusedImports" />

		<!-- Checks for Size Violations. -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="LineLength">
			<property name="max" value="120" />
			<property name="tabWidth" value="4" />
		</module>
		<module name="MethodLength" />
		<module name="ParameterNumber" />

		<!-- Checks for whitespace -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad" />
		<!-- <module name="GenericWhitespace" /> -->
		<module name="MethodParamPad" />
		<module name="NoWhitespaceAfter" />
		<module name="NoWhitespaceBefore" />
		<module name="OperatorWrap" />
		<module name="ParenPad" />
		<module name="TypecastParenPad" />
		<module name="WhitespaceAfter">
			<property name="tokens" value="COMMA, SEMI" />
		</module>
		<module name="WhitespaceAround" />

		<!-- Modifier Checks -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder" />
		<module name="RedundantModifier" />

		<!-- Checks for blocks. You know, those {}'s -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="AvoidNestedBlocks" />
		<module name="EmptyBlock" />
		<module name="LeftCurly" />
		<module name="NeedBraces" />
		<module name="RightCurly" />

		<!-- Checks for common coding problems -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<!-- <module name="AvoidInlineConditionals"/> -->
		<module name="DoubleCheckedLocking" />    <!-- MY FAVOURITE -->
		<module name="EmptyStatement" />
		<module name="EqualsHashCode" />
		<module name="HiddenField">
			<property name="tokens" value="VARIABLE_DEF" />
			<property name="ignoreConstructorParameter" value="true" />
			<property name="ignoreSetter" value="true" />
			<property name="ignoreAbstractMethods" value="true" />
		</module>
		<module name="IllegalInstantiation" />
		<module name="InnerAssignment" />
		<module name="MagicNumber" />
		<!-- <module name="MissingSwitchDefault" /> -->
		<module name="RedundantThrows" />
		<module name="SimplifyBooleanExpression" />
		<module name="SimplifyBooleanReturn" />

		<!-- Checks for class design -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<!-- <module name="DesignForExtension"/> -->
		<module name="FinalClass" />
		<module name="HideUtilityClassConstructor" />
		<module name="InterfaceIsType" />
		<module name="VisibilityModifier" />

		<!-- Miscellaneous other checks. -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle" />
		<!-- <module name="FinalParameters"/> -->
		<module name="TodoComment" />
		<module name="UpperEll" />

	</module>

</module>
